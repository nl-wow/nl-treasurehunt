app NLTreasurehunt {
  wasp: {
    version: "^0.11.4"
  },
  title: "NLTreasurehunt",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int      @id @default(autoincrement())
    username String   @unique
    password String
    answers  Answer[]
psl=}

entity Question {=psl
    id        Int      @id @default(autoincrement())
    title     String
    published Boolean  @default(false)
    answers   Answer[]
psl=}

entity Answer {=psl
    id         Int      @id @default(autoincrement())
    content    String
    proof      String
    isCorrect  Boolean  @default(false)
    question   Question @relation(fields: [questionId], references: [id])
    questionId Int
    user       User     @relation(fields: [userId], references: [id])
    userId     Int
psl=}

action publishQuestion {
  fn: import { publishQuestion } from "@server/actions.js",
  entities: [Question]
}

action registerAnswer {
  fn: import { registerAnswer } from "@server/actions.js",
  entities: [Answer, Question]
}

action checkAnswer {
  fn: import { checkAnswer } from "@server/actions.js",
  entities: [Answer]
}

query getQuestion {
  fn: import { getQuestion } from "@server/queries.js",
  entities: [Question]
}

query getAnswer {
  fn: import { getAnswer } from "@server/queries.js",
  entities: [Answer]
}

query getAnswers {
  fn: import { getAnswers } from "@server/queries.js",
  entities: [Answer]
}

route SubmitAnswerRoute { path: "/submit", to: SubmitAnswerPage }
page SubmitAnswerPage {
  component: import { SubmitAnswer } from "@client/pages/SubmitAnswer.jsx",
  authRequired: true
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/pages/Dashboard.jsx",
  authRequired: true
}

route AdminRoute { path: "/admin", to: AdminPage }
page AdminPage {
  component: import { Admin } from "@client/pages/Admin.jsx",
  authRequired: true
}

route LeaderboardRoute { path: "/leaderboard", to: LeaderboardPage }
page LeaderboardPage {
  component: import { Leaderboard } from "@client/pages/Leaderboard.jsx",
  authRequired: true
}